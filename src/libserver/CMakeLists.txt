add_library(eibstack STATIC)
target_link_libraries(eibstack PRIVATE common includes fmt::fmt)
target_sources(eibstack PRIVATE common.cpp trace.cpp emi.cpp lowlevel.cpp)
target_sources(eibstack PRIVATE cm_tp1.cpp cm_ip.cpp)
target_sources(eibstack PRIVATE lpdu.cpp link.cpp)
target_sources(eibstack PRIVATE npdu.cpp layer3.cpp router.cpp)
if(HAVE_GROUPCACHE)
  target_sources(eibstack PRIVATE groupcache.cpp groupcacheclient.cpp)
endif()
target_sources(eibstack PRIVATE tpdu.cpp layer4.cpp)
target_sources(eibstack PRIVATE apdu.cpp)
if(HAVE_BUSMONITOR)
  target_sources(eibstack PRIVATE busmonitor.cpp)
endif()
if(HAVE_MANAGEMENT)
  target_sources(eibstack PRIVATE management.cpp layer7.cpp
                                  managementclient.cpp)
endif()
target_sources(eibstack PRIVATE eibnetip.cpp ipsupport.cpp)
target_sources(eibstack PRIVATE client.cpp connection.cpp)

add_library(server STATIC)
target_link_libraries(server PUBLIC common includes fmt::fmt)
target_include_directories(server PUBLIC .)
target_sources(server PRIVATE server.h server.cpp localserver.h localserver.cpp
                              inetserver.h inetserver.cpp)
if(HAVE_SYSTEMD)
  target_sources(server PRIVATE systemdserver.cpp)
endif()
if(HAVE_EIBNETSERVER)
  target_sources(server PRIVATE eibnetserver.cpp)
endif()
if(HAVE_FT12 OR HAVE_USB)
  target_sources(server PRIVATE emi_common.cpp emi1.cpp emi2.cpp cemi.cpp)
endif()
if(HAVE_USB)
  target_link_libraries(server PRIVATE usb)
  target_sources(server PRIVATE eibusb.cpp usblowlevel.cpp)
endif()
target_sources(server PRIVATE llserial.cpp lltcp.cpp lowlatency.cpp retry.cpp)
